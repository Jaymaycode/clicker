import tkinter as tk

root = tk.Tk()
root.title("The Box")

# Initial score and upgrade variables
score = 0
score_per_click = 1
upgrade_cost = 10
auto_increment_cost = 50
auto_increment_active = False
auto_increment_amount = 0.1
auto_increment_speed = 1000  # in milliseconds
speed_upgrade_cost = 30
amount_upgrade_cost = 40

# Function to update score
def update_score(amount=1):
    global score
    score += amount
    rounded_score = round(score)  # Round the score to the nearest whole number
    score_label.config(text="Score: " + str(rounded_score))

# Auto-increment function
def auto_increment():
    global auto_increment_speed
    if auto_increment_active:
        update_score(auto_increment_amount)
        root.after(auto_increment_speed, auto_increment)  # Schedule based on current speed

# Function to purchase click upgrade
def purchase_click_upgrade():
    global score, score_per_click, upgrade_cost
    if score >= upgrade_cost:
        score -= upgrade_cost
        score_per_click += 1
        upgrade_cost *= 2
        upgrade_button.config(text=f"Upgrade Click (Cost: {upgrade_cost})")
        score_label.config(text="Score: " + str(score))

# Function to purchase auto-increment upgrade
def purchase_auto_increment():
    global score, auto_increment_cost, auto_increment_active
    if score >= auto_increment_cost and not auto_increment_active:
        score -= auto_increment_cost
        auto_increment_active = True
        auto_increment_button.config(text="Auto-Increment Active", state=tk.DISABLED)
        score_label.config(text="Score: " + str(score))
        auto_increment()  # Start the auto-increment process

# Function to upgrade auto-increment speed
def upgrade_speed():
    global score, auto_increment_speed, speed_upgrade_cost
    if score >= speed_upgrade_cost and auto_increment_speed > 100:  # Ensuring a minimum speed limit
        score -= speed_upgrade_cost
        auto_increment_speed -= 100  # Decrease interval by 100ms
        speed_upgrade_cost *= 2
        speed_upgrade_button.config(text=f"Upgrade Speed (Cost: {speed_upgrade_cost})")
        score_label.config(text="Score: " + str(score))

# Function to upgrade auto-increment amount
def upgrade_amount():
    global score, auto_increment_amount, amount_upgrade_cost
    if score >= amount_upgrade_cost:
        score -= amount_upgrade_cost
        auto_increment_amount += 0.1  # Increase amount per auto-click
        amount_upgrade_cost *= 2
        amount_upgrade_button.config(text=f"Upgrade Amount (Cost: {amount_upgrade_cost})")
        score_label.config(text="Score: " + str(score))

# Clickable box button
box_btn = tk.Button(root, text="ðŸ“¦ Box", command=lambda: update_score(score_per_click))
box_btn.pack()

# Score label
score_label = tk.Label(root, text="Score: 0")
score_label.pack()

# Upgrade click button
upgrade_button = tk.Button(root, text=f"Upgrade Click (Cost: {upgrade_cost})", command=purchase_click_upgrade)
upgrade_button.pack()

# Upgrade auto-increment button
auto_increment_button = tk.Button(root, text=f"Auto-Increment (Cost: {auto_increment_cost})", command=purchase_auto_increment)
auto_increment_button.pack()

# Upgrade auto-increment speed button
speed_upgrade_button = tk.Button(root, text=f"Upgrade Speed (Cost: {speed_upgrade_cost})", command=upgrade_speed)
speed_upgrade_button.pack()

# Upgrade auto-increment amount button
amount_upgrade_button = tk.Button(root, text=f"Upgrade Amount (Cost: {amount_upgrade_cost})", command=upgrade_amount)
amount_upgrade_button.pack()

root.mainloop()
